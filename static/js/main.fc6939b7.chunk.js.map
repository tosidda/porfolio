{"version":3,"sources":["images/sidda.jpg","logo.svg","components/TopMenu.js","components/SideMenu.js","components/MainContent.js","components/Footer.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","appBar","width","marginLeft","menuButton","marginRight","spacing","title","flexGrow","TopMenu","classes","AppBar","position","className","IconButton","edge","color","aria-label","MenuItem","Typography","variant","drawer","flexShrink","drawerPaper","backgroundImage","bigAvatar","margin","height","SideMenu","Drawer","open","anchor","paper","Grid","container","justify","alignItems","Avatar","src","sid","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","toolbar","mixins","backgroundColor","palette","background","default","padding","content","fullWidth","MainContent","paragraph","top","bottom","footer","fontSize","Footer","root","display","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc6939b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sidda.e0186d29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport ToolBar from '@material-ui/core/ToolBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Face';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n  \r\n\r\nfunction TopMenu() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <AppBar position='fixed' className={classes.appBar}>\r\n            <ToolBar>\r\n                <IconButton\r\n                    edge='start'\r\n                    className={classes.menuButton}\r\n                    color='inherit'\r\n                    aria-label='menu'\r\n                >\r\n                <MenuIcon />\r\n                </IconButton>\r\n                <MenuItem>\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        Home\r\n                    </Typography>\r\n                </MenuItem>\r\n            </ToolBar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default TopMenu\r\n","import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport List from '@material-ui/core/List'\r\nimport sid from '../images/sidda.jpg'\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundImage: `linear-gradient(#cfd9df,#e2ebf0)`,\r\n    color: 'grey',\r\n  },\r\n  bigAvatar: {\r\n    margin: 30,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\nfunction SideMenu() {\r\n    const classes = useStyles()\r\n    return (\r\n        <Drawer\r\n            open={true}\r\n            variant='permanent'\r\n            anchor='left'\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper\r\n            }}\r\n            >\r\n\r\n      <Grid container justify='center' alignItems='center'>\r\n        <Avatar\r\n          src={sid}\r\n          className={classes.bigAvatar}\r\n        />\r\n      </Grid>\r\n\r\n      <List>\r\n        {['Profile', 'Sign Out'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <AccountCircle /> : <ExitToApp />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      </Drawer>\r\n\r\n    )\r\n}\r\n\r\nexport default SideMenu;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  title: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction MainContent() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.fullWidth}>\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.title}>\r\n        <Typography variant='h6'>Title</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc maximus,\r\n          nulla ut commodo sagittis, sapien dui mattis dui, non pulvinar lorem\r\n          felis nec erat\r\n        </Typography>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MainContent;","import React from 'react'\r\nimport { makeStyles, AppBar, Typography } from '@material-ui/core'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: 10,\r\n  },\r\n  footer: {\r\n    marginLeft: 20,\r\n    fontSize: 17,\r\n  },\r\n}));\r\nfunction Footer() {\r\n    const classes = useStyles()\r\n    return (\r\n        <AppBar position='fixed' className={classes.appBar}>\r\n            <Typography variant='h6' className={classes.Footer}>\r\n              Â© Copyright 2020\r\n            </Typography>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport TopMenu from '../components/TopMenu'\r\nimport SideMenu from '../components/SideMenu'\r\nimport MainContent from '../components/MainContent'\r\nimport Footer from '../components/Footer'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Home() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root}>\r\n            <TopMenu />\r\n            <SideMenu />\r\n            <MainContent />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home'\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}